{
  "Resources": {
    "ClusterAdminRole047D4FCA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::867881815416:root"
                    ]
                  ]
                }
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/ClusterAdminRole/Resource"
      }
    },
    "ClusterAdminRoleDefaultPolicy7B82B7E8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ClusterAdminRoleDefaultPolicy7B82B7E8",
        "Roles": [
          {
            "Ref": "ClusterAdminRole047D4FCA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/ClusterAdminRole/DefaultPolicy/Resource"
      }
    },
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/22",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/26",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.64/26",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-2b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet2/EIP"
      }
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet2/NATGateway"
      }
    },
    "VPCPublicSubnet3Subnet631C5E25": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.128/26",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-2c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet3/Subnet"
      }
    },
    "VPCPublicSubnet3RouteTable98AE0E14": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet3/RouteTable"
      }
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet3/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet3/DefaultRoute"
      }
    },
    "VPCPublicSubnet3EIPAD4BC883": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet3/EIP"
      }
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PublicSubnet3/NATGateway"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-2b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCPrivateSubnet3Subnet3EDCD457": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-east-2c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet3/Subnet"
      }
    },
    "VPCPrivateSubnet3RouteTable192186F8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet3/RouteTable"
      }
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/PrivateSubnet3/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/VPC/VPCGW"
      }
    },
    "clusterRole88D0C969": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/Role/Resource"
      }
    },
    "clusterControlPlaneSecurityGroup7F1D5AB2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/ControlPlaneSecurityGroup/Resource"
      }
    },
    "clusterCreationRole2B3B5002": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::867881815416:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPrivateSubnet3DefaultRoute27F311AE",
        "VPCPrivateSubnet3RouteTable192186F8",
        "VPCPrivateSubnet3RouteTableAssociationC28D144E",
        "VPCPrivateSubnet3Subnet3EDCD457",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3EIPAD4BC883",
        "VPCPublicSubnet3NATGatewayD3048F5C",
        "VPCPublicSubnet3RouteTable98AE0E14",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
        "VPCPublicSubnet3Subnet631C5E25",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/Resource/CreationRole/Resource"
      }
    },
    "clusterCreationRoleDefaultPolicy69503D2C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "clusterRole88D0C969",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:listAttachedRolePolicies"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FargatePodExecutionRole806DA378",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "clusterCreationRoleDefaultPolicy69503D2C",
        "Roles": [
          {
            "Ref": "clusterCreationRole2B3B5002"
          }
        ]
      },
      "DependsOn": [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPrivateSubnet3DefaultRoute27F311AE",
        "VPCPrivateSubnet3RouteTable192186F8",
        "VPCPrivateSubnet3RouteTableAssociationC28D144E",
        "VPCPrivateSubnet3Subnet3EDCD457",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3EIPAD4BC883",
        "VPCPublicSubnet3NATGatewayD3048F5C",
        "VPCPublicSubnet3RouteTable98AE0E14",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
        "VPCPublicSubnet3Subnet631C5E25",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/Resource/CreationRole/DefaultPolicy/Resource"
      }
    },
    "clusterC5B25D0D": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksClusterResourceProviderframeworkonEvent50BB86B8Arn"
          ]
        },
        "Config": {
          "version": "1.22",
          "roleArn": {
            "Fn::GetAtt": [
              "clusterRole88D0C969",
              "Arn"
            ]
          },
          "resourcesVpcConfig": {
            "subnetIds": [
              {
                "Ref": "VPCPublicSubnet1SubnetB4246D30"
              },
              {
                "Ref": "VPCPublicSubnet2Subnet74179F39"
              },
              {
                "Ref": "VPCPublicSubnet3Subnet631C5E25"
              },
              {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
              },
              {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
              },
              {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
              }
            ],
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "clusterControlPlaneSecurityGroup7F1D5AB2",
                  "GroupId"
                ]
              }
            ],
            "endpointPublicAccess": false,
            "endpointPrivateAccess": true
          },
          "logging": {
            "clusterLogging": [
              {
                "enabled": true,
                "types": [
                  "api",
                  "audit",
                  "authenticator",
                  "controllerManager",
                  "scheduler"
                ]
              }
            ]
          }
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "AttributesRevision": 2
      },
      "DependsOn": [
        "clusterCreationRoleDefaultPolicy69503D2C",
        "clusterCreationRole2B3B5002",
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPrivateSubnet3DefaultRoute27F311AE",
        "VPCPrivateSubnet3RouteTable192186F8",
        "VPCPrivateSubnet3RouteTableAssociationC28D144E",
        "VPCPrivateSubnet3Subnet3EDCD457",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3EIPAD4BC883",
        "VPCPublicSubnet3NATGatewayD3048F5C",
        "VPCPublicSubnet3RouteTable98AE0E14",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
        "VPCPublicSubnet3Subnet631C5E25",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/Resource/Resource/Default"
      }
    },
    "clusterKubectlReadyBarrier17584D5B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready"
      },
      "DependsOn": [
        "clusterfargateprofileDefaultFargateProfileBBEA40E2",
        "clusterCreationRoleDefaultPolicy69503D2C",
        "clusterCreationRole2B3B5002",
        "clusterC5B25D0D"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/KubectlReadyBarrier"
      }
    },
    "clusterClusterSecurityGroupfromEKSClusterShinyProxyStackBastionSecurityGroupDBC44576ALLTRAFFICAEB76912": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from EKSClusterShinyProxyStackBastionSecurityGroupDBC44576:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "clusterC5B25D0D",
            "ClusterSecurityGroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "BastionSecurityGroupDAB89EBD",
            "GroupId"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/ClusterSecurityGroup/from EKSClusterShinyProxyStackBastionSecurityGroupDBC44576:ALL TRAFFIC"
      }
    },
    "clusterAwsAuthmanifestB57F2A94": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c81b8acfa30b75feb87de6afcbe11c1e74467a584a\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterAdminRole047D4FCA",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterAdminRole047D4FCA",
                  "Arn"
                ]
              },
              "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "FargatePodExecutionRole806DA378",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{SessionName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\",\\\"system:node-proxier\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "PruneLabel": "aws.cdk.eks/prune-c81b8acfa30b75feb87de6afcbe11c1e74467a584a",
        "Overwrite": true
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/AwsAuth/manifest/Resource/Default"
      }
    },
    "clusterOpenIdConnectProvider0EC7BDBC": {
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn"
          ]
        },
        "ClientIDList": [
          "sts.amazonaws.com"
        ],
        "ThumbprintList": [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
        ],
        "Url": {
          "Fn::GetAtt": [
            "clusterC5B25D0D",
            "OpenIdConnectIssuerUrl"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/OpenIdConnectProvider/Resource/Default"
      }
    },
    "clusterawsloadbalancercontrollerConditionJson98172EF9": {
      "Type": "Custom::AWSCDKCfnJson",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn"
          ]
        },
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "clusterOpenIdConnectProvider0EC7BDBC"
                      }
                    ]
                  }
                ]
              },
              ":aud\":\"sts.amazonaws.com\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":oidc-provider/",
                      {
                        "Ref": "clusterOpenIdConnectProvider0EC7BDBC"
                      }
                    ]
                  }
                ]
              },
              ":sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/aws-load-balancer-controller/ConditionJson/Resource/Default"
      }
    },
    "clusterawsloadbalancercontrollerRoleB6C08760": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "Fn::GetAtt": [
                    "clusterawsloadbalancercontrollerConditionJson98172EF9",
                    "Value"
                  ]
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "clusterOpenIdConnectProvider0EC7BDBC"
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/aws-load-balancer-controller/Role/Resource"
      }
    },
    "clusterawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResourceA0512465": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c83501e109a7ee81d453fa23d30698d7a993e8a839\":\"\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
              {
                "Fn::GetAtt": [
                  "clusterawsloadbalancercontrollerRoleB6C08760",
                  "Arn"
                ]
              },
              "\"}}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "PruneLabel": "aws.cdk.eks/prune-c83501e109a7ee81d453fa23d30698d7a993e8a839"
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/aws-load-balancer-controller/manifest-aws-load-balancer-controllerServiceAccountResource/Resource/Default"
      }
    },
    "clusterchartawsloadbalancercontroller44D7BBFD": {
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "Release": "awslbcontroller",
        "Chart": "aws-load-balancer-controller",
        "Version": "1.4.2",
        "Values": {
          "Fn::Join": [
            "",
            [
              "{\"clusterName\":\"",
              {
                "Ref": "clusterC5B25D0D"
              },
              "\",\"region\":\"us-east-2\",\"vpcId\":\"",
              {
                "Ref": "VPCB9E5F0B4"
              },
              "\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller\"},\"replicaCount\":2,\"podDisruptionBudget\":{\"maxUnavailable\":1},\"resources\":{\"requests\":{\"cpu\":\"0.25\",\"memory\":\"0.5Gi\"}}}"
            ]
          ]
        },
        "Namespace": "kube-system",
        "Repository": "https://aws.github.io/eks-charts",
        "CreateNamespace": true
      },
      "DependsOn": [
        "clusterawsloadbalancercontrollerConditionJson98172EF9",
        "clusterawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResourceA0512465",
        "clusterawsloadbalancercontrollerRoleB6C08760",
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/chart-aws-load-balancer-controller/Resource/Default"
      }
    },
    "clusterchartmetricsserverE7041085": {
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "Release": "metricsserver",
        "Chart": "metrics-server",
        "Version": "3.7.0",
        "Values": "{\"resources\":{\"requests\":{\"cpu\":\"0.25\",\"memory\":\"0.5Gi\"}}}",
        "Namespace": "kube-system",
        "Repository": "https://kubernetes-sigs.github.io/metrics-server/",
        "CreateNamespace": true
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/chart-metrics-server/Resource/Default"
      }
    },
    "clusterfargateprofileDefaultFargateProfileBBEA40E2": {
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksClusterResourceProviderframeworkonEvent50BB86B8Arn"
          ]
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "Config": {
          "clusterName": {
            "Ref": "clusterC5B25D0D"
          },
          "fargateProfileName": "default",
          "podExecutionRoleArn": {
            "Fn::GetAtt": [
              "FargatePodExecutionRole806DA378",
              "Arn"
            ]
          },
          "selectors": [
            {
              "namespace": "kube-system"
            },
            {
              "namespace": "default"
            },
            {
              "namespace": "shinyproxy"
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/fargate-profile-DefaultFargateProfile/Resource/Default"
      }
    },
    "clustermanifestFargateLoggingNamespace994A21BB": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "Manifest": "[{\"kind\":\"Namespace\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"aws-observability\",\"labels\":{\"aws.cdk.eks/prune-c8d9c4742ada98741b5c8ba09721ea2bb0b8a73676\":\"\",\"aws-observability\":\"enabled\"}}}]",
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "PruneLabel": "aws.cdk.eks/prune-c8d9c4742ada98741b5c8ba09721ea2bb0b8a73676"
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/manifest-FargateLoggingNamespace/Resource/Default"
      }
    },
    "clustermanifestFargateLoggingCW93F27A4E": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "Manifest": "[{\"kind\":\"ConfigMap\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"aws-logging\",\"namespace\":\"aws-observability\",\"labels\":{\"aws.cdk.eks/prune-c8f049dc0babbe58685bd88550210842dffc12cce7\":\"\"}},\"data\":{\"output.conf\":\"[OUTPUT]\\n    Name cloudwatch_logs\\n    Match   *\\n    region us-east-2\\n    log_group_name fluent-bit-cloudwatch\\n    log_stream_prefix from-fluent-bit-\\n    auto_create_group true\\n    log_retention_days 7\\n\",\"filters.conf\":\"[FILTER]\\n  Name  kubernetes\\n  Match  kube.*\\n  Merge_Log  On\\n  Buffer_Size  0\\n  Kube_Meta_Cache_TTL  300s\"}}]",
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "PruneLabel": "aws.cdk.eks/prune-c8f049dc0babbe58685bd88550210842dffc12cce7"
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B",
        "clustermanifestFargateLoggingNamespace994A21BB"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/cluster/manifest-FargateLoggingCW/Resource/Default"
      }
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.us-east-2.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-867881815416-us-east-2/83a6e368e38dca36d33e958bc4a1e694fa3e6e3aea7f0494975267ba9595433c.json"
            ]
          ]
        },
        "Parameters": {
          "referencetoEKSClusterShinyProxyStackclusterCreationRole945BD7DAArn": {
            "Fn::GetAtt": [
              "clusterCreationRole2B3B5002",
              "Arn"
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
        "aws:asset:path": "EKSClusterShinyProxyStackawscdkawseksClusterResourceProviderD3475C0E.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.us-east-2.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-867881815416-us-east-2/34ee85c8489219d4fcba66a329e05d583bcf6c933d0ebb267d9e3af1564e3d83.json"
            ]
          ]
        },
        "Parameters": {
          "referencetoEKSClusterShinyProxyStackcluster30A3E5E2Arn": {
            "Fn::GetAtt": [
              "clusterC5B25D0D",
              "Arn"
            ]
          },
          "referencetoEKSClusterShinyProxyStackclusterCreationRole945BD7DAArn": {
            "Fn::GetAtt": [
              "clusterCreationRole2B3B5002",
              "Arn"
            ]
          },
          "referencetoEKSClusterShinyProxyStackVPCPrivateSubnet1Subnet3C4CEF4ERef": {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          "referencetoEKSClusterShinyProxyStackVPCPrivateSubnet2SubnetAD3D4B9FRef": {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          },
          "referencetoEKSClusterShinyProxyStackVPCPrivateSubnet3Subnet0A378712Ref": {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
          },
          "referencetoEKSClusterShinyProxyStackcluster30A3E5E2ClusterSecurityGroupId": {
            "Fn::GetAtt": [
              "clusterC5B25D0D",
              "ClusterSecurityGroupId"
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
        "aws:asset:path": "EKSClusterShinyProxyStackawscdkawseksKubectlProvider77F84743.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "FargatePodExecutionRole806DA378": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks-fargate-pods.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/FargatePodExecutionRole/Resource"
      }
    },
    "FargatePodExecutionRoleDefaultPolicy1F9B1DCC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "logs:CreateLogStream",
                "logs:CreateLogGroup",
                "logs:PutRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FargatePodExecutionRoleDefaultPolicy1F9B1DCC",
        "Roles": [
          {
            "Ref": "FargatePodExecutionRole806DA378"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/FargatePodExecutionRole/DefaultPolicy/Resource"
      }
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ],
        "Policies": [
          {
            "PolicyName": "Inline",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider"
                  ]
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role"
      }
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-867881815416-us-east-2",
          "S3Key": "6344328f714011c8fd36f97b0a4283b1f6457c7cd48795da86c4303644ca6e15.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler",
        "aws:asset:path": "asset.6344328f714011c8fd36f97b0a4283b1f6457c7cd48795da86c4303644ca6e15",
        "aws:asset:property": "Code"
      }
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Role"
      }
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-867881815416-us-east-2",
          "S3Key": "82f0a85294208ae3b91f3555d120b9dba87465fea28c5d773f8e4c1bfe31c863.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler",
        "aws:asset:path": "asset.82f0a85294208ae3b91f3555d120b9dba87465fea28c5d773f8e4c1bfe31c863",
        "aws:asset:property": "Code"
      }
    },
    "awslbcontrollerpolicy0EC97B4B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:CreateServiceLinkedRole",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeTags",
                "ec2:GetCoipPoolUsage",
                "ec2:DescribeCoipPools",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "cognito-idp:DescribeUserPoolClient",
                "acm:ListCertificates",
                "acm:DescribeCertificate",
                "iam:ListServerCertificates",
                "iam:GetServerCertificate",
                "waf-regional:GetWebACL",
                "waf-regional:GetWebACLForResource",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
                "shield:GetSubscriptionState",
                "shield:DescribeProtection",
                "shield:CreateProtection",
                "shield:DeleteProtection"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateSecurityGroup",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateTags",
              "Condition": {
                "StringEquals": {
                  "ec2:CreateAction": "CreateSecurityGroup"
                },
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:security-group/*"
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DeleteTags"
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:security-group/*"
            },
            {
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DeleteSecurityGroup"
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateTargetGroup"
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:DeleteRule"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags"
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:DeleteTargetGroup"
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeregisterTargets"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
            },
            {
              "Action": [
                "elasticloadbalancing:SetWebAcl",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:ModifyRule"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "awslbcontrollerpolicy0EC97B4B",
        "Roles": [
          {
            "Ref": "clusterawsloadbalancercontrollerRoleB6C08760"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/awslbcontrollerpolicy/Resource"
      }
    },
    "BastionSecurityGroupDAB89EBD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKSClusterShinyProxyStack/BastionSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/BastionSecurityGroup/Resource"
      }
    },
    "BastionInstanceInstanceProfile9D596C64": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ClusterAdminRole047D4FCA"
          }
        ]
      },
      "DependsOn": [
        "clusterchartmetricsserverE7041085"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/BastionInstance/InstanceProfile"
      }
    },
    "BastionInstance3B3E1DA4": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-2a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 20
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "BastionInstanceInstanceProfile9D596C64"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.large",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "BastionSecurityGroupDAB89EBD",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EKSClusterShinyProxyStack/BastionInstance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\ncurl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/bin\ncurl -s https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash -\ncurl -s https://fluxcd.io/install.sh | bash -\ncurl --silent --location https://rpm.nodesource.com/setup_14.x | bash -\nyum install nodejs git -y\nsu -c \"aws eks update-kubeconfig --name ",
                {
                  "Ref": "clusterC5B25D0D"
                },
                " --region us-east-2\" ssm-user"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "clusterchartmetricsserverE7041085",
        "ClusterAdminRoleDefaultPolicy7B82B7E8",
        "ClusterAdminRole047D4FCA"
      ],
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/BastionInstance/Resource"
      }
    },
    "CoreDNSFargatePatchC84DF960": {
      "Type": "Custom::AWSCDK-EKS-KubernetesPatch",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSClusterShinyProxyStackawscdkawseksKubectlProviderframeworkonEvent0CB2848FArn"
          ]
        },
        "ResourceName": "deployment/coredns",
        "ResourceNamespace": "kube-system",
        "ApplyPatchJson": "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"fargate\"}}}}}",
        "RestorePatchJson": "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"ec2\"}}}}}",
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "PatchType": "strategic"
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/CoreDNSFargatePatch/Resource/Default"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RwU7DMAz9lt2zMMYFjlUFoyBY1KJdUZp5bVibVImzaar677jtto4LJz+/OPbz85LfL/hiJo9+rrb7eaVz3mYo1Z4R9d1qWfM2tRWweGeGKGyl1alPJ5QYj9IoEM7udAUdA7Xk7aZR/eNGxEyEnGqzkBvAnptQagPCl8zHCSM/cZH3VmmJ2pprcQ+eE9GHT4kriXCUJyacPhCcGicGwRG+FIxKzlmEtGJZg0GWgQpO42nlbGgGDf8SiSkceM8uK9+uT3vvPW/jKniazaKjjwKW7D3kgxLwH9LoHXhk6wZMso2tMaCQXDvoLX3IwB20gkgpG0jZK1R1XEqH7EW6goSf7b1pKCSqsutYCt4G16uh0baeUvLsBq8DNmFw582Pjo6n/vvrqofcB6SKQptiOLh0sqaxrmPihKU1dw/8kT/NfrzWc0eSdQ08HeMvwjLSkVgCAAA="
      },
      "Metadata": {
        "aws:cdk:path": "EKSClusterShinyProxyStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "clusterConfigCommand30DB378E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "clusterC5B25D0D"
            },
            " --region us-east-2 --role-arn ",
            {
              "Fn::GetAtt": [
                "ClusterAdminRole047D4FCA",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "clusterGetTokenCommand09C244B5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "clusterC5B25D0D"
            },
            " --region us-east-2 --role-arn ",
            {
              "Fn::GetAtt": [
                "ClusterAdminRole047D4FCA",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "EKSClusterName": {
      "Description": "The name of the EKS Cluster",
      "Value": {
        "Ref": "clusterC5B25D0D"
      },
      "Export": {
        "Name": "EKSClusterName"
      }
    },
    "EKSClusterOIDCProviderARN": {
      "Description": "The EKS Cluster's OIDC Provider ARN",
      "Value": {
        "Ref": "clusterOpenIdConnectProvider0EC7BDBC"
      },
      "Export": {
        "Name": "EKSClusterOIDCProviderARN"
      }
    },
    "EKSClusterKubectlRoleARN": {
      "Description": "The EKS Cluster's kubectl Role ARN",
      "Value": {
        "Fn::GetAtt": [
          "clusterCreationRole2B3B5002",
          "Arn"
        ]
      },
      "Export": {
        "Name": "EKSClusterKubectlRoleARN"
      }
    },
    "EKSSGID": {
      "Description": "The EKS Cluster's kubectl SG ID",
      "Value": {
        "Fn::GetAtt": [
          "clusterC5B25D0D",
          "ClusterSecurityGroupId"
        ]
      },
      "Export": {
        "Name": "EKSSGID"
      }
    },
    "EKSFargatePodExecRoleArn": {
      "Description": "The EKS Cluster's Fargate Pod Execution Role ARN",
      "Value": {
        "Fn::GetAtt": [
          "FargatePodExecutionRole806DA378",
          "Arn"
        ]
      },
      "Export": {
        "Name": "EKSFargatePodExecRoleArn"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}