AWSTemplateFormatVersion: 2010-09-09

Description: A CI/CD pipeline for building eks fargate cluster for shinyproxy.

Parameters:

  SourceConnectionArn:
    Type: String
    Description: The ARN of the connection to the external source code repository
  RepositoryOwner:
    Type: String
    Description: The owner of the GitHub repository.
  RepositoryName:
    Type: String
    Description: The name of the GitHub repository.
  RepositoryBranch:
    Type: String
    Description: The name of the branch.
    Default: master
  KubeProxyECR:
    Type: String
    Description: The name of the Kube Proxy ECR.
  ShinyProxyECR:
    Type: String
    Description: The name of the Shiny Proxy ECR.
  ShinyAppECR:
    Type: String
    Description: The name of the Shiny App ECR.
  EksStackName:
    Type: String
    Description: The name of the EKS Cloudformation Stack.

Resources:

  KubeProxy: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: 
        Ref: KubeProxyECR
      ImageScanningConfiguration: 
        ScanOnPush: true 
      ImageTagMutability: 'IMMUTABLE'
  
  ShinyProxy: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName:
        Ref: ShinyProxyECR
      ImageTagMutability: 'IMMUTABLE'
      ImageScanningConfiguration: 
        ScanOnPush: true
  
  ShinyApp: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName:
        Ref: ShinyAppECR
      ImageTagMutability: 'IMMUTABLE'
      ImageScanningConfiguration: 
        ScanOnPush: true

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Fn::Sub: "${RepositoryName}-pipeline"
      Stages:
        - Name: Source
          Actions:
            - Name: Checkout
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn:
                  Ref: SourceConnectionArn
                FullRepositoryId:
                  Fn::Sub: ${RepositoryOwner}/${RepositoryName}
                BranchName:
                  Ref: RepositoryBranch
                OutputArtifactFormat: CODE_ZIP
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Ref: CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Ref: CodeBuildProjectEKS
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: EKSBuildOutput
        
      RoleArn:
        Fn::GetAtt:  CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactsBucket

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${RepositoryName}-build
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_cdk.yaml
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::GetAtt: CodeBuildServiceRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value:
              Ref: ArtifactsBucket
          - Name: EKS_CF_STACK_NAME
            Value: 
              Fn::Sub: "${EksStackName}"
      Cache:
        Type: S3
        Location:
          Fn::Sub: ${ArtifactsBucket}/cache
  
  CodeBuildProjectEKS:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${RepositoryName}-eks-build
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_eks.yaml
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::GetAtt: CodeBuildServiceRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value:
              Ref: ArtifactsBucket
          - Name: EKS_CF_STACK_NAME
            Value: 
              Fn::Sub: "${EksStackName}"
          - Name: REPOSITORY_URI_KUBE
            Value: 
              Fn::Sub: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${KubeProxyECR}"
          - Name: REPOSITORY_URI_SHINY_PROXY_APP
            Value: 
              Fn::Sub: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ShinyProxyECR}"
          - Name: REPOSITORY_URI_SHINY_APP
            Value: 
              Fn::Sub: "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ShinyAppECR}"
          - Name: AWS_ACCOUNT_ID
            Value: 
              Ref: "AWS::AccountId"
          - Name: AWS_REGION
            Value: 
              Ref: "AWS::Region"

      Cache:
        Type: S3
        Location:
          Fn::Sub: ${ArtifactsBucket}/build

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: codepipeline.${EksStackName}.${AWS::Region}
      LifecycleConfiguration:
        Rules:
          - Id: DeleteBuildArtifactsAfterOneWeek
            ExpirationInDays: 7
            Status: Enabled

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineTrustPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource:
                  Ref: SourceConnectionArn
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - Fn::GetAtt: CodeBuildProject.Arn
                  - Fn::GetAtt: CodeBuildProjectEKS.Arn
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - Fn::GetAtt: ArtifactsBucket.Arn
                  - Fn::Sub: arn:aws:s3:::${ArtifactsBucket}/*
                  

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: 
      - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildTrustPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepositoryName}-build
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepositoryName}-build:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                Resource: "*"
              - Effect: Allow
                Action:
                - cloudformation:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                  - iam:*Role*
                Resource: 
                - Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/cdk-*"
              - Effect: Allow
                Action:
                  - ecr:SetRepositoryPolicy
                  - ecr:GetLifecyclePolicy
                  - ecr:PutImageScanningConfiguration
                  - ecr:DescribeRepositories
                  - ecr:CreateRepository
                  - ecr:DeleteRepository
                Resource:
                - Fn::Sub: "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/cdk-*"
              - Effect: Allow
                Action:
                  - ssm:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - eks:DescribeCluster
                Resource: "*"
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: 
                - Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/${EksStackName}-*"
